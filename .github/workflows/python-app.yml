name: lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  pyright:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: |
            setup.py

      - name: Install dependencies
        run: python -m pip install -r requirements.txt -r requirements-dev.txt

      - name: Set up pyright
        run: echo "PYRIGHT_VERSION=$(python -c 'import pyright; print(pyright.__pyright_version__)')" >> $GITHUB_ENV

      - name: Run pyright (Linux)
        uses: jakebailey/pyright-action@v1.3.0
        with:
          version: ${{ env.PYRIGHT_VERSION }}
          python-version: ${{ matrix.python-version }}
          python-platform: Linux
          # only add comments for 3.8
          no-comments: ${{ matrix.python-version != '3.8' }}
          warnings: true

      - name: Run pyright (Windows)
        uses: jakebailey/pyright-action@v1.3.0
        # run anyway
        if: success() || failure()
        with:
          version: ${{ env.PYRIGHT_VERSION }}
          python-version: ${{ matrix.python-version }}
          python-platform: Windows
          # only add comments for one platform
          no-comments: true
          warnings: true

  mypy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: |
            setup.py

      - name: Install dependencies
        run: python -m pip install -r requirements.txt -r requirements-dev.txt

      - name: Run mypy
        run: mypy .

  test-ubuntu:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt -r requirements-dev.txt
          python -m pip install --pre tox-gh-actions
      - name: Test with pytest
        run: |
          # remove '.' in python-version and prepend with 'py' to get the correct tox env
          tox -e py$(echo ${{ matrix.python-version }} | sed 's/\.//g')
  
  test-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt -r requirements-dev.txt
          python -m pip install --pre tox-gh-actions
      - name: Test with pytest
        run: tox
        env:
          PLATFORM: windows-latest
